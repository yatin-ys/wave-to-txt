services:
  redis:
    image: redis:7-alpine
    restart: always
    volumes:
      - redis_data:/data

  backend:
    build:
      context: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend/logs:/app/logs
    depends_on:
      - redis
    environment:
      - GROQ_API_KEY=${GROQ_API_KEY}
      - ALLOWED_ORIGINS=*
      - REDIS_URL=redis://redis:6379/0
      - R2_ENDPOINT_URL=${R2_ENDPOINT_URL}
      - R2_ACCESS_KEY_ID=${R2_ACCESS_KEY_ID}
      - R2_SECRET_ACCESS_KEY=${R2_SECRET_ACCESS_KEY}
      - R2_BUCKET_NAME=${R2_BUCKET_NAME}
      - ASSEMBLYAI_API_KEY=${ASSEMBLYAI_API_KEY}
      - ASSEMBLYAI_WEBHOOK_SECRET=${ASSEMBLYAI_WEBHOOK_SECRET}
      - BACKEND_BASE_URL=${BACKEND_BASE_URL}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    restart: unless-stopped

  worker:
    build:
      context: ./backend
    command:
      [
        "celery",
        "-A",
        "backend.worker.celery_app",
        "worker",
        "-l",
        "info",
        "--concurrency=4",
      ]
    volumes:
      - ./backend/logs:/app/logs
    environment:
      - GROQ_API_KEY=${GROQ_API_KEY}
      - REDIS_URL=redis://redis:6379/0
      - R2_ENDPOINT_URL=${R2_ENDPOINT_URL}
      - R2_ACCESS_KEY_ID=${R2_ACCESS_KEY_ID}
      - R2_SECRET_ACCESS_KEY=${R2_SECRET_ACCESS_KEY}
      - R2_BUCKET_NAME=${R2_BUCKET_NAME}
      - ASSEMBLYAI_API_KEY=${ASSEMBLYAI_API_KEY}
      - ASSEMBLYAI_WEBHOOK_SECRET=${ASSEMBLYAI_WEBHOOK_SECRET}
      - BACKEND_BASE_URL=${BACKEND_BASE_URL}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    depends_on:
      - redis
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      args:
        - VITE_API_URL=/api
    ports:
      - "5173:80"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  redis_data:
