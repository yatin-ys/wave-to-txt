services:
  redis:
    image: redis:7-alpine
    restart: always
    volumes:
      - redis_data:/data

  backend:
    build:
      context: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend/temp_audio:/app/temp_audio
    depends_on:
      - redis
    environment:
      - GROQ_API_KEY=${GROQ_API_KEY}
      - ALLOWED_ORIGINS=*
      - REDIS_URL=redis://redis:6379/0
    restart: unless-stopped

  worker:
    build:
      context: ./backend
    # The command to start the Celery worker process.
    # Concurrency can be adjusted based on workload.
    command:
      [
        "celery",
        "-A",
        "backend.worker.celery_app",
        "worker",
        "-l",
        "info",
        "--concurrency=4",
      ]
    volumes:
      - ./backend/temp_audio:/app/temp_audio
    environment:
      - GROQ_API_KEY=${GROQ_API_KEY}
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      args:
        - VITE_API_URL=/api
    ports:
      - "5173:80"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  redis_data:
