services:
  redis:
    image: redis:7-alpine
    restart: always
    volumes:
      - redis_data:/data

  backend:
    build:
      context: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend/logs:/app/logs
      - faiss_data:/app/faiss_db
    depends_on:
      - redis
    environment:
      - GROQ_API_KEY=${GROQ_API_KEY}
      - ALLOWED_ORIGINS=*
      - REDIS_URL=redis://redis:6379/0
      - R2_ENDPOINT_URL=${R2_ENDPOINT_URL}
      - R2_ACCESS_KEY_ID=${R2_ACCESS_KEY_ID}
      - R2_SECRET_ACCESS_KEY=${R2_SECRET_ACCESS_KEY}
      - R2_BUCKET_NAME=${R2_BUCKET_NAME}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - ASSEMBLYAI_API_KEY=${ASSEMBLYAI_API_KEY}
      - ASSEMBLYAI_WEBHOOK_SECRET=${ASSEMBLYAI_WEBHOOK_SECRET}
      - BACKEND_BASE_URL=${BACKEND_BASE_URL}
      - RAG_CHUNK_SIZE=${RAG_CHUNK_SIZE:-1000}
      - RAG_CHUNK_OVERLAP=${RAG_CHUNK_OVERLAP:-200}
      - RAG_TOP_K_RESULTS=${RAG_TOP_K_RESULTS:-5}
      - FAISS_DB_PATH=/app/faiss_db
      # Supabase configuration for backend persistence
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - SUPABASE_JWT_SECRET=${SUPABASE_JWT_SECRET}

  worker:
    build:
      context: ./backend
    volumes:
      - ./backend/logs:/app/logs
      - faiss_data:/app/faiss_db
    depends_on:
      - redis
      - backend
    environment:
      - GROQ_API_KEY=${GROQ_API_KEY}
      - REDIS_URL=redis://redis:6379/0
      - R2_ENDPOINT_URL=${R2_ENDPOINT_URL}
      - R2_ACCESS_KEY_ID=${R2_ACCESS_KEY_ID}
      - R2_SECRET_ACCESS_KEY=${R2_SECRET_ACCESS_KEY}
      - R2_BUCKET_NAME=${R2_BUCKET_NAME}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - ASSEMBLYAI_API_KEY=${ASSEMBLYAI_API_KEY}
      - ASSEMBLYAI_WEBHOOK_SECRET=${ASSEMBLYAI_WEBHOOK_SECRET}
      - BACKEND_BASE_URL=${BACKEND_BASE_URL}
      - RAG_CHUNK_SIZE=${RAG_CHUNK_SIZE:-1000}
      - RAG_CHUNK_OVERLAP=${RAG_CHUNK_OVERLAP:-200}
      - RAG_TOP_K_RESULTS=${RAG_TOP_K_RESULTS:-5}
      - FAISS_DB_PATH=/app/faiss_db
      # Supabase configuration for backend persistence
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - SUPABASE_JWT_SECRET=${SUPABASE_JWT_SECRET}
    command: celery -A backend.worker.celery_app worker --loglevel=info

  frontend:
    build:
      context: ./frontend
      args:
        # API Configuration - Use nginx proxy path
        VITE_API_URL: /api

        # Supabase Authentication Configuration (build-time)
        VITE_SUPABASE_URL: ${VITE_SUPABASE_URL}
        VITE_SUPABASE_ANON_KEY: ${VITE_SUPABASE_ANON_KEY}
        VITE_AUTH_REDIRECT_URL: ${VITE_AUTH_REDIRECT_URL:-http://localhost:3000}
        VITE_ENABLE_GOOGLE_AUTH: ${VITE_ENABLE_GOOGLE_AUTH:-true}
    ports:
      - "3000:80"
    depends_on:
      - backend

volumes:
  redis_data:
  faiss_data:
